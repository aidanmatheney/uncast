/* tslint:disable */
/* eslint-disable */
/**
 * Uncast Web API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserPodcastState
 */
export interface UserPodcastState {
    /**
     * 
     * @type {string}
     * @memberof UserPodcastState
     */
    userId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserPodcastState
     */
    podcastId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserPodcastState
     */
    isSubscription?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserPodcastState
     */
    isFavorite?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserPodcastState
     */
    isAutoDownload?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UserPodcastState
     */
    playbackSpeed?: number | null;
}

export function UserPodcastStateFromJSON(json: any): UserPodcastState {
    return UserPodcastStateFromJSONTyped(json, false);
}

export function UserPodcastStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPodcastState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'podcastId': !exists(json, 'podcastId') ? undefined : json['podcastId'],
        'isSubscription': !exists(json, 'isSubscription') ? undefined : json['isSubscription'],
        'isFavorite': !exists(json, 'isFavorite') ? undefined : json['isFavorite'],
        'isAutoDownload': !exists(json, 'isAutoDownload') ? undefined : json['isAutoDownload'],
        'playbackSpeed': !exists(json, 'playbackSpeed') ? undefined : json['playbackSpeed'],
    };
}

export function UserPodcastStateToJSON(value?: UserPodcastState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'userId': value.userId,
        'podcastId': value.podcastId,
        'isSubscription': value.isSubscription,
        'isFavorite': value.isFavorite,
        'isAutoDownload': value.isAutoDownload,
        'playbackSpeed': value.playbackSpeed,
    };
}


